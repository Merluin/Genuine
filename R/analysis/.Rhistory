# Select and rename columns for the final dataset
select(
File.name = file,
File.emotion = emotion,
File.elicitation = elicitation,
Pt.id,
Pt.age = eta,
Pt.gender = gender,
Pt.ccPAS = ccPAS,
Pt.group = group,
AED.accuracy = gesino_kb.corr,
AED.resp = gesino_kb.keys,
AED.intensity = genuine_slider.response,
AED.rt = gesino_kb.rt,
EIJ.accuracy = accuracy,
EIJ.label = emotion_ms.clicked_name,
EIJ.intensity = intensity_slider.response,
Exp.date = date,
Exp.session = session,
Exp.name = expName,
Exp.version = psychopyVersion,
Exp.frameRate = frameRate
) %>%
filter(
Pt.id != 15, Pt.id != 23 )
# data for EAD
emotion_accuracy <- dataset %>%
group_by(Pt.id,Pt.group,Exp.session,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(EIJ.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(Exp.session,".",File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,Exp.session,File.elicitation)) %>%
spread(label, accuracy) %>%
arrange(Pt.group)
genuine_accuracy <- dataset %>%
group_by(Pt.id,Pt.group,Exp.session,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(AED.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(Exp.session,".",File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,Exp.session,File.elicitation)) %>%
spread(label, accuracy) %>%
arrange(Pt.group)
# Calculating hits, misses, false alarms, and correct rejections
SDT_genuine <- dataset %>%
GenuineDetection()
# Relation between changes in the AED and dispositional empathy or alexithymic traits
Questionnaires<-questionnaires("original_data/questionnaire.csv",subjectorder,",")
# IRI TAS summary
IRI<-Questionnaires%>%
select(Pt.id, iri_tot)%>%
drop_na()%>%
summarise_at(vars(iri_tot), list(mean,sd,max,min))%>%
'colnames<-'(c( "mean", "Sd","max","min"))
TAS<-Questionnaires%>%
select(Pt.id, tas_tot)%>%
drop_na()%>%
summarise_at(vars( tas_tot), list(mean,sd,max,min))%>%
'colnames<-'(c( "mean", "Sd","max","min"))
Questionnaires$Pt.id <- sprintf("%02d", as.integer(Questionnaires$Pt.id))
Questionnaires <- Questionnaires %>%
arrange(subject)
summary_genuine <- SDT_genuine %>%
mutate(SessionGroup = case_when(
Exp.session == "baseline" ~ "baseline",
Exp.session != "baseline" ~ "post"
)) %>%
group_by(Pt.id, SessionGroup, Pt.group) %>%
summarise(d_prime = mean(d_prime, na.rm = TRUE),
c = mean(c, na.rm = TRUE)) %>%
pivot_wider(names_from = SessionGroup, values_from = c(d_prime, c)) %>%
mutate(d_delta = d_prime_post - d_prime_baseline,
c_delta = c_post - c_baseline) %>%
select(Pt.id, Pt.group, d_delta, c_delta)
Questionnaire<-Questionnaires %>%
select(Pt.id,fantasy,perspective_taking,empathic_concern,personal_distress,iri_tot,tas_tot,subject)
Questionnaire <- Questionnaires %>%
select(Pt.id,fantasy,perspective_taking,empathic_concern,personal_distress,iri_tot,tas_tot,subject)
ΓAED <- left_join(summary_genuine, Questionnaire, by = "Pt.id") %>%
drop_na() %>% select(-c(subject,Pt.id))%>%
arrange(Pt.group)
d_wide <- SDT_genuine %>%
select( Pt.id, Pt.group, Exp.session, File.emotion, d_prime ) %>%
mutate( label = paste0(Exp.session,".", File.emotion)) %>%
ungroup()%>%
select(-c(Exp.session, File.emotion)) %>%
spread(label, d_prime) %>%
arrange(Pt.group)
c_wide <- SDT_genuine %>%
select( Pt.id, Pt.group, Exp.session, File.emotion, c ) %>%
mutate( label = paste0(Exp.session,".", File.emotion)) %>%
ungroup()%>%
select(-c(Exp.session, File.emotion)) %>%
spread(label, c) %>%
arrange(Pt.group)
# data for EIJ
autoevaluation <- read_excel("original_data/autovalutazione_clips.xlsx") %>%
select(-Emotion) %>%
'colnames<-'(c( "File.elicitation", "File.name","autoval"))
data <-  dataset %>%
select(Pt.id, File.emotion, Pt.group,Exp.session, EIJ.intensity, File.name)
EA_dataset <- left_join(autoevaluation,data,by = "File.name") %>%
drop_na()%>%
filter(File.elicitation != "paused") %>%
group_by(Pt.id, File.emotion, Exp.session, Pt.group) %>%
summarise(EA = cor(EIJ.intensity,autoval),
EIJ.intensity = mean(EIJ.intensity, na.rm =TRUE),
autoval= mean(autoval, na.rm =TRUE))
genuine_intensity <- dataset %>%
filter(EIJ.accuracy == 1)%>%
group_by(Pt.id, File.emotion, Pt.group,Exp.session) %>%
summarise(slider = mean(abs(AED.intensity), na.rm = TRUE)) %>%
mutate( label = paste0(Exp.session,".", File.emotion)) %>%
ungroup()%>%
select(-c(Exp.session, File.emotion)) %>%
spread(label, slider) %>%
arrange(Pt.group)
emotion_intensity <- dataset %>%
group_by(Pt.id, File.emotion, Pt.group,Exp.session) %>%
summarise(slider = mean(EIJ.intensity)) %>%
mutate( label = paste0(Exp.session,".", File.emotion)) %>%
ungroup()%>%
select(-c(Exp.session, File.emotion)) %>%
spread(label, slider) %>%
arrange(Pt.group)
EA <- EA_dataset %>%
select( Pt.id, Pt.group, Exp.session, File.emotion, EA ) %>%
mutate( label = paste0(Exp.session,".", File.emotion)) %>%
ungroup()%>%
select(-c(Exp.session, File.emotion)) %>%
spread(label, EA) %>%
arrange(Pt.group)
demography <- dataset %>%
filter(Exp.session == "baseline",
File.name == "1_rg_2.mp4") %>%
select( Pt.group, Pt.id, Pt.gender, Pt.age) %>%
arrange(Pt.group)
# Save the data in .RData format
save(dataset, emotion_accuracy, genuine_accuracy, SDT_genuine, d_wide,c_wide, ΓAED,
EA_dataset, genuine_intensity, emotion_intensity, EA, demography,
file = paste0("data/",datasetname,".RData"))
# write_csv(dataset,
#           file = paste0("data/",datasetname,".csv"))
#################################################
#
# END
#
#################################################
#  Script for Genuine Study - Dataset
#################################################
###########################################################################
#
#  Experiment:  GENUINE
#  Programmer:  QUETTIER THOMAS
#  Date:        20/05/2024
#  Description: dataset export to xlsx
#
#  Update:      18/09/2024
###########################################################################
# Clearing workspace
rm(list = ls())  # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all()  # Load necessary functions and packages
# Data loading and eliminate outliers and 5 of the 6 M1 group
# Data loading
load("data/psychopy_dataset.RData")
wb <- createWorkbook()
# Add a new sheet with the formatted name
addWorksheet(wb, sheetName = "d_prime")
# Write data to the corresponding sheet
writeData(wb, sheet = "d_prime", d_wide)
# Add a new sheet with the formatted name
addWorksheet(wb, sheetName = "criterion")
# Write data to the corresponding sheet
writeData(wb, sheet = "criterion", c_wide)
# Add a new sheet with the formatted name
addWorksheet(wb, sheetName = "ΓAED")
# Write data to the corresponding sheet
writeData(wb, sheet = "ΓAED", ΓAED)
# addWorksheet(wb, sheetName = "accuracy.emotion")
# # Write data to the corresponding sheet
# writeData(wb, sheet = "accuracy.emotion", emotion_accuracy)
#
# addWorksheet(wb, sheetName = "accuracy.genuine")
# # Write data to the corresponding sheet
# writeData(wb, sheet = "accuracy.genuine", genuine_accuracy)
# Add a new sheet with the formatted name
addWorksheet(wb, sheetName = "EA")
# Write data to the corresponding sheet
writeData(wb, sheet = "EA", EA)
# Add a new sheet with the formatted name
addWorksheet(wb, sheetName = "slider.genuine")
# Write data to the corresponding sheet
writeData(wb, sheet = "slider.genuine", genuine_intensity)
# Add a new sheet with the formatted name
addWorksheet(wb, sheetName = "slider.emotion")
# Write data to the corresponding sheet
writeData(wb, sheet = "slider.emotion", emotion_intensity)
# Add a new sheet with the formatted name
addWorksheet(wb, sheetName = "demography")
# Write data to the corresponding sheet
writeData(wb, sheet = "demography", demography)
# Save the workbook
saveWorkbook(wb, "data/Genuine_summary_full_pts.xlsx", overwrite = TRUE)
#################################################
#
# END
#
#################################################
#  Script for Genuine Study - xlsx
#################################################
# Clearing workspace
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
# replace_csv("session",003) pt 5 session 3 was set to 1
# Data loading
load("data/psychopy_dataset.RData")
#ANOVA for baseline
dat_session1 <- SDT_genuine %>%
filter(Exp.session == "baseline", Pt.group != "sham")
anova_d_baseline <- aov_ez("Pt.id", "d_prime", dat_session1, within = "File.emotion", between = "Pt.group")
#ANOVA for baseline
dat_session1 <- SDT_genuine %>%
filter(Exp.session == "baseline")
anova_d_baseline <- aov_ez("Pt.id", "d_prime", dat_session1, within = "File.emotion", between = "Pt.group")
anova_d_baseline
anova_d <- aov_ez("Pt.id", "d_prime", SDT_genuine, within = c("File.emotion","Exp.session"), between = "Pt.group")
anova_d
interaction_d <- emmeans(anova_d, pairwise ~ Exp.session|Pt.group)
interaction_d
#ANOVA for baseline
dat_session1 <- SDT_genuine %>%
filter(Exp.session == "baseline", Pt.group != "sham")
anova_d_baseline <- aov_ez("Pt.id", "d_prime", dat_session1, within = "File.emotion", between = "Pt.group")
anova_d <- aov_ez("Pt.id", "d_prime", SDT_genuine, within = c("File.emotion","Exp.session"), between = "Pt.group")
interaction_d <- emmeans(anova_d, pairwise ~ Exp.session|Pt.group)
interaction_d
anova_d <- aov_ez("Pt.id", "d_prime", SDT_genuine %>%
filter( Pt.group != "sham"), within = c("File.emotion","Exp.session"), between = "Pt.group")
interaction_d <- emmeans(anova_d, pairwise ~ Exp.session|Pt.group)
interaction_d
rm(list = ls())  # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all()  # Load necessary functions and packages
# Data loading and eliminate outliers and 5 of the 6 M1 group
# Data loading
load("data/psychopy_dataset.RData")
# Group-wise Calculations
#   - Objective: Calculate mean age, standard deviation, and count by gender for each group
group_stats <- demography %>%
group_by(Pt.group) %>%
summarise(
age_mean = mean(Pt.age, na.rm = TRUE), # Mean age per group
age_sd = sd(Pt.age, na.rm = TRUE), # Standard deviation of age per group
count = n(), # Total count of subjects per group
female = sum(Pt.gender == "female"), # Count of female subjects per group
male = sum(Pt.gender == "male") # Count of male subjects per group
) %>%
ungroup()
#   - Objective: Compute overall statistics for the entire dataset
total_stats <- demography %>%
summarise(
Pt.group = "total",
age_mean = mean(Pt.age, na.rm = TRUE), # Overall mean age
age_sd = sd(Pt.age, na.rm = TRUE), # Overall standard deviation of age
count = n(), # Total count of subjects
female = sum(Pt.gender == "female"), # Total count of female subjects
male = sum(Pt.gender == "male") # Total count of male subjects
)
# Combine Group-wise and Total Statistics
#   - Purpose: Create a comprehensive table summarizing demographics
descriptive_table <- rbind(group_stats, total_stats) # Combine group and total stats into one table
# 1. ANOVA on Group
eta <- aov_ez("Pt.id", "Pt.age", demography, between = "Pt.group")
print(eta)
eta2(eta)
# Homogeneity of Variances Test using Levene's Test
residuals <- residuals(eta)
shapiro_test_residuals <- shapiro.test(residuals)
leveneTest(Pt.age ~ Pt.group, data = demography)
shapiro_test_residuals
gender_table <- table(demography$Pt.group, demography$Pt.gender)
chisq.test(gender_table)
gender_table
anova_c_baseline <- aov_ez("Pt.id", "c", SDT_genuine, within = "File.emotion", between = "Pt.group")
anova_c_baseline
demography <- demography %>%
filter( Pt.group != "sham")
group_stats <- demography %>%
group_by(Pt.group) %>%
summarise(
age_mean = mean(Pt.age, na.rm = TRUE), # Mean age per group
age_sd = sd(Pt.age, na.rm = TRUE), # Standard deviation of age per group
count = n(), # Total count of subjects per group
female = sum(Pt.gender == "female"), # Count of female subjects per group
male = sum(Pt.gender == "male") # Count of male subjects per group
) %>%
ungroup()
total_stats <- demography %>%
summarise(
Pt.group = "total",
age_mean = mean(Pt.age, na.rm = TRUE), # Overall mean age
age_sd = sd(Pt.age, na.rm = TRUE), # Overall standard deviation of age
count = n(), # Total count of subjects
female = sum(Pt.gender == "female"), # Total count of female subjects
male = sum(Pt.gender == "male") # Total count of male subjects
)
#   - Purpose: Create a comprehensive table summarizing demographics
descriptive_table <- rbind(group_stats, total_stats) # Combine group and total stats into one table
descriptive_table
# 1. ANOVA on Group
eta <- aov_ez("Pt.id", "Pt.age", demography, between = "Pt.group")
print(eta)
eta2(eta)
residuals <- residuals(eta)
shapiro_test_residuals <- shapiro.test(residuals)
leveneTest(Pt.age ~ Pt.group, data = demography)
shapiro_test_residuals
gender_table <- table(demography$Pt.group, demography$Pt.gender)
chisq.test(gender_table)
gender_table
demography$Pt.group
anova_c_baseline <- aov_ez("Pt.id", "c", dat_session1, within = "File.emotion", between = "Pt.group")
anova_c_baseline
anova_c <- aov_ez("Pt.id", "c", SDT_genuine%>%
filter( Pt.group != "sham"), within = c("File.emotion","Exp.session"), between = "Pt.group")
anova_c
# plots
data_genuine_mean <- SDT_genuine %>%
group_by(File.emotion, Exp.session, Pt.group) %>%
summarise(d_prime = mean(d_prime, na.rm = TRUE),
c = mean(c, na.rm = TRUE)) %>%
ungroup()
x_breaks <- c("baseline", "T0", "T20")
plot_d <- data_genuine_mean %>%
group_by(Exp.session, Pt.group) %>%
summarise(d_prime = mean(d_prime)) %>%
ungroup() %>%
ggplot(aes(x = Exp.session, y = d_prime, group = Pt.group, color = Pt.group)) +
geom_point() +
geom_line() +
stat_summary(fun = mean, geom = "line") +  # Adjust this as needed
coord_fixed(ylim = c(0.8, 2)) +
labs(x = "", y = "Sensitivity (dprime)") +
theme_minimal() +
theme(legend.position = "none") +
scale_x_discrete(breaks = x_breaks) +
theme(
plot.margin = unit(c(1, 1, 1, 1), "cm")  # Adjust margins to be consistent
)+
scale_color_manual(values = c("Ctrl1rIFG-rpSTS" = "#D9A9CF", "Ctrl2rpSTS-rIFG" = "#7E5084", "Exp1rIFG-rM1" = "#4A7F99"))
plot_c <- data_genuine_mean %>%
group_by(Exp.session, Pt.group) %>%
summarise(c = mean(c)) %>%
ungroup() %>%
ggplot(aes(x = Exp.session, y = c, group = Pt.group, color = Pt.group)) +
geom_point() +
geom_line() +
stat_summary(fun = mean, geom = "line") +  # Adjust this as needed
coord_fixed(ylim = c(-0.4, 0.4)) +
labs(x = "", y = "Bias (criterion)") +
theme_minimal() +
theme(legend.position = "none") +
scale_x_discrete(breaks = x_breaks) +
scale_color_manual(values = c("Ctrl1rIFG-rpSTS" = "#D9A9CF", "Ctrl2rpSTS-rIFG" = "#7E5084", "Exp1rIFG-rM1" = "#4A7F99"))+
theme(
aspect.ratio = 1/2 ) # Adjust aspect ratio to make the
print(plot_c)
print(plot_d)
plot_sd <- cowplot::plot_grid(
plot_d, plot_c, #plot_c, plot_d,
nrow = 2,  # Use nrow to specify rows instead of rows
align = 'vh',  # Align vertically
axis = 'lr',
labels = "AUTO" # Align left and right axes
)
plot_sd
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
# Data loading
load("data/psychopy_dataset.RData")
# Normality Test for the entire RT distribution using Shapiro-Wilk test
shapiro_test_result <- shapiro.test(EA_dataset$EA)
# Visual inspection of RT distribution and variance using box plots
ggplot(EA_dataset, aes(x = interaction(Pt.group, File.emotion, Exp.session), y = EA)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Improve label readability
# Fi
# Set contrasts for categorical predictors in the model
contrasts(EA_dataset$Pt.group) <- contr.sum(4)
# Set contrasts for categorical predictors in the model
contrasts(EA_dataset$Pt.group) <- contr.sum(5)
contrasts(EA_dataset$Exp.session) <- contr.sum(3)
contrasts(EA_dataset$File.emotion) <- contr.sum(3)
# baseline difference
EA_dataset_baseline <- EA_dataset %>%
filter(Exp.session == "baseline")
# Model with interaction between session, group, and emotion
fit <- lmer(EA ~ Pt.group * File.emotion + (1|Pt.id),
data = EA_dataset_baseline)
car::Anova(fit, type = "III")
plot(allEffects(fit))
main_emotion <- emmeans(fit, pairwise ~ File.emotion, adjust = "bonf")
# Fit the generalized linear mixed-effects model (lmer)
fit0 <- lmer(EA ~ 1  + (1 | Pt.id),
data = EA_dataset)
fit1 <- lmer(EA ~ File.emotion  + (1 | Pt.id),
data = EA_dataset)
fit2 <- lmer(EA ~ Exp.session + (1 | Pt.id),
data = EA_dataset)
fit3 <- lmer(EA ~ Pt.group + (1 | Pt.id),
data = EA_dataset)
fit4 <- lmer(EA ~ Exp.session * Pt.group + (1 | Pt.id),
data = EA_dataset)
fit5 <- lmer(EA ~ File.emotion * Pt.group + (1 | Pt.id),
data = EA_dataset)
fit6 <- lmer(EA ~ File.emotion * Exp.session * Pt.group + (1 | Pt.id),
data = EA_dataset)
# Compare the models using ANOVA
anova(fit0, fit1, fit2, fit3, fit4, fit5, fit6)
fit <- fit3
# Plot all effects from GLMM for visualization
plot(allEffects(fit))
# Clearing workspace
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
# Data loading
load("data/psychopy_dataset.RData")
View(dataset)
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
# Data loading
load("data/validation.RData")
###########################################################################
#
#  Experiment:  GENUINE
#  Programmer:  QUETTIER THOMAS
#  Date:        23/01/2024
#  Description: Emotion Intensity Judgment (EIJ)
#
#  Update:      23/01/2024
###########################################################################
# Clearing workspace
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
# Data loading
load("data/psychopy_dataset.RData")
View(dataset)
fit <- lmer(EIJ.intensity ~ 1  + (1 | Pt.id),
data = dataset)
plot(allEffects(fit))
car::Anova(fit, type = "III")
fit <- lmer(EIJ.intensity ~ File.elicitation  + (1 | Pt.id),
data = dataset)
car::Anova(fit, type = "III")
main_emotion <- emmeans(fit, pairwise ~ File.elicitation, adjust = "bonf")
plot(allEffects(fit))
fit <- lmer(EIJ.intensity ~ File.elicitation * File.emotion  + (1 | Pt.id),
data = dataset)
car::Anova(fit, type = "III")
main_emotion <- emmeans(fit, pairwise ~ File.elicitation | File.emotion, adjust = "bonf")
plot(allEffects(fit))
aov_ez("Pt.id", "EIJ.intensity", data = dataset, within = c( "File.elicitation" , "File.emotion" ) )
main_emotion <- emmeans(model, pairwise ~ File.elicitation | File.emotion, adjust = "bonf")
model <- aov_ez("Pt.id", "EIJ.intensity", data = dataset, within = c( "File.elicitation" , "File.emotion" ) )
main_emotion <- emmeans(model, pairwise ~ File.elicitation | File.emotion, adjust = "bonf")
main_emotion
rm(list = ls())  # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all()  # Load necessary functions and packages
# Data loading and eliminate outliers and 5 of the 6 M1 group
# Data loading
load("data/psychopy_dataset.RData")
demography <- demography %>%
filter( Pt.group != "sham")
table(demography$Pt.group)
group_stats <- demography %>%
group_by(Pt.group) %>%
summarise(
age_mean = mean(Pt.age, na.rm = TRUE), # Mean age per group
age_sd = sd(Pt.age, na.rm = TRUE), # Standard deviation of age per group
count = n(), # Total count of subjects per group
female = sum(Pt.gender == "female"), # Count of female subjects per group
male = sum(Pt.gender == "male") # Count of male subjects per group
) %>%
ungroup()
total_stats <- demography %>%
summarise(
Pt.group = "total",
age_mean = mean(Pt.age, na.rm = TRUE), # Overall mean age
age_sd = sd(Pt.age, na.rm = TRUE), # Overall standard deviation of age
count = n(), # Total count of subjects
female = sum(Pt.gender == "female"), # Total count of female subjects
male = sum(Pt.gender == "male") # Total count of male subjects
)
# Combine Group-wise and Total Statistics
#   - Purpose: Create a comprehensive table summarizing demographics
descriptive_table <- rbind(group_stats, total_stats) # Combine group and total stats into one table
descriptive_table
eta <- aov_ez("Pt.id", "Pt.age", demography, between = "Pt.group")
print(eta)
eta2(eta)
gender_table <- table(demography$Pt.group, demography$Pt.gender)
chisq.test(gender_table)
gender_table
demography <- demography %>%
filter( Pt.group != "sham") %>%
mutate( Pt.groupPt.group = factor(Pt.group, levels = c()))
