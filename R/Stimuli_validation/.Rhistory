File.emotion = Emotion,
File.elicitation = elicitation,
Pt.id = participant,
Pt.age = eta,
Pt.gender = gender,
AED.accuracy = gesino_kb.corr,
AED.resp = gesino_kb.keys,
AED.intensity = genuine_slider.response,
EIJ.accuracy = accuracy,
EIJ.label = emotion_ms.clicked_name,
EIJ.intensity = intensity_slider.response,
Exp.date = date,
Exp.name = expName,
Exp.version = psychopyVersion,
Exp.frameRate = frameRate
)
)
# Retain only experimental trials and create columns for the ccPAS protocol and group assignment
dataset <- dataset %>%
filter(Trials_loop.thisRepN == 0) %>%
mutate(Emotion = case_when(emotion == "anger" ~ "Anger",
emotion == "fear" ~ "Fearfull",
emotion == "happiness" ~ "Happiness"),
Emotion = factor(Emotion, levels = c("Anger", "Fearfull","Happiness")),
gender = ifelse(tolower(gender) == "m", "male", "female"),
Pt.id = sprintf("%02d", as.integer(participant))) %>% # Recode gender for clarity
# Select and rename columns for the final dataset
select(
File.name = file,
File.emotion = Emotion,
File.elicitation = elicitation,
Pt.id = participant,
Pt.age = eta,
Pt.gender = gender,
AED.accuracy = gesino_kb.corr,
AED.resp = gesino_kb.keys,
AED.intensity = genuine_slider.response,
EIJ.accuracy = accuracy,
EIJ.label = emotion_ms.clicked_name,
EIJ.intensity = intensity_slider.response,
Exp.date = date,
Exp.name = expName,
Exp.version = psychopyVersion,
Exp.frameRate = frameRate
)
###########################################################################
#
#  Experiment:  GENUINE
#  Programmer:  QUETTIER THOMAS
#  Date:        23/01/2024
# Description: This script aggregates all .csv files generated by PsychoPy
#              and compiles them into a single .RData file for streamlined analysis.
#
#  Update:      08/09/2024
###########################################################################
# Clearing workspace
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
#replace_csv("session",2) # function to correct error in coding metadata from psychopy
# Data loading
datasetname <- "validation_dataset"
dataset_concatenation("original_data/psychopy",datasetname) # aggregates all .csv files
load(paste0("data/",datasetname,".RData") )
# Count participants
n <- length(unique(dataset$participant)) # Calculate the number of unique participants
target <- c("29_rg_2.mp4", "19_rg_5.mp4", "16_rg_2.mp4",
"1_rs_3.mp4", "10_rs_4.mp4", "19_rs_3.mp4",
"29_pg_1.mp4", "3_pg_1.mp4", "15_pg_2.mp4",
"55_ps_2.mp4", "20_ps_3.mp4", "9_fg_1.mp4",
"40_fg_1.mp4", "45_fg_2.mp4", "44_fs_1.mp4",
"49_fs_2.mp4", "22_fs_1.mp4")
dataset <- dataset %>%
mutate(excluded = ifelse(file %in% target, 1, 0))
# Retain only experimental trials and create columns for the ccPAS protocol and group assignment
dataset <- dataset %>%
filter(Trials_loop.thisRepN == 0) %>%
mutate(Emotion = case_when(emotion == "anger" ~ "Anger",
emotion == "fear" ~ "Fearfull",
emotion == "happiness" ~ "Happiness"),
Emotion = factor(Emotion, levels = c("Anger", "Fearfull","Happiness")),
gender = ifelse(tolower(gender) == "m", "male", "female"),
Pt.id = sprintf("%02d", as.integer(participant))) %>% # Recode gender for clarity
# Select and rename columns for the final dataset
select(
File.name = file,
File.emotion = Emotion,
File.elicitation = elicitation,
Pt.id = participant,
Pt.age = eta,
Pt.gender = gender,
AED.accuracy = gesino_kb.corr,
AED.resp = gesino_kb.keys,
AED.intensity = genuine_slider.response,
EIJ.accuracy = accuracy,
EIJ.label = emotion_ms.clicked_name,
EIJ.intensity = intensity_slider.response,
Exp.date = date,
Exp.name = expName,
Exp.version = psychopyVersion,
Exp.frameRate = frameRate
)
# data for EAD
emotion_accuracy <- dataset %>%
group_by(Pt.id,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(EIJ.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,File.elicitation)) %>%
spread(label, accuracy)
genuine_accuracy <- dataset %>%
group_by(Pt.id,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(AED.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,File.elicitation)) %>%
spread(label, accuracy)
# Calculating hits, misses, false alarms, and correct rejections
SDT_genuine <- dataset %>%
GenuineDetection()
d_wide <- SDT_genuine %>%
select( Pt.id,  File.emotion, d_prime ) %>%
spread(File.emotion, d_prime)
c_wide <- SDT_genuine %>%
select( Pt.id, File.emotion, c ) %>%
spread(File.emotion, c)
autoevaluation <- read_excel("original_data/autovalutazione_clips.xlsx") %>%
select(-Emotion) %>%
'colnames<-'(c( "File.elicitation", "File.name","autoval"))
autoevaluation <- read_excel("original_data/autovalutazione_clips.xlsx") %>%
select(-Emotion) %>%
'colnames<-'(c( "File.elicitation", "File.name","autoval"))
data <-  dataset %>%
select(Pt.id, File.emotion, Pt.group,Exp.session, EIJ.intensity, File.name)
EA_dataset <- left_join(autoevaluation,data,by = "File.name") %>%
drop_na()%>%
filter(File.elicitation != "paused") %>%
group_by(Pt.id, File.emotion) %>%
summarise(EA = cor(EIJ.intensity,autoval),
EIJ.intensity = mean(EIJ.intensity, na.rm =TRUE),
autoval= mean(autoval, na.rm =TRUE))
autoevaluation <- read_excel("original_data/autovalutazione_clips.xlsx") %>%
select(-Emotion) %>%
'colnames<-'(c( "File.elicitation", "File.name","autoval"))
data <-  dataset %>%
select(Pt.id, File.emotion,  EIJ.intensity, File.name)
left_join(autoevaluation,data,by = "File.name") %>%
drop_na()%>%
filter(File.elicitation != "paused")
EA_dataset <- left_join(autoevaluation,data,by = "File.name") %>%
drop_na()%>%
filter(File.elicitation != "paused") %>%
group_by(Pt.id, File.emotion)
EA_dataset <- left_join(autoevaluation,data,by = "File.name") %>%
drop_na()%>%
filter(File.elicitation != "paused") %>%
group_by(Pt.id, File.emotion) %>%
summarise(EA = cor(EIJ.intensity,autoval),
EIJ.intensity = mean(EIJ.intensity, na.rm =TRUE),
autoval= mean(autoval, na.rm =TRUE))
###########################################################################
#
#  Experiment:  GENUINE
#  Programmer:  QUETTIER THOMAS
#  Date:        23/01/2024
# Description: This script aggregates all .csv files generated by PsychoPy
#              and compiles them into a single .RData file for streamlined analysis.
#
#  Update:      08/09/2024
###########################################################################
# Clearing workspace
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
#replace_csv("session",2) # function to correct error in coding metadata from psychopy
# Data loading
datasetname <- "validation_dataset"
dataset_concatenation("original_data/psychopy",datasetname) # aggregates all .csv files
load(paste0("data/",datasetname,".RData") )
# Count participants
n <- length(unique(dataset$participant)) # Calculate the number of unique participants
target <- c("29_rg_2.mp4", "19_rg_5.mp4", "16_rg_2.mp4",
"1_rs_3.mp4", "10_rs_4.mp4", "19_rs_3.mp4",
"29_pg_1.mp4", "3_pg_1.mp4", "15_pg_2.mp4",
"55_ps_2.mp4", "20_ps_3.mp4", "9_fg_1.mp4",
"40_fg_1.mp4", "45_fg_2.mp4", "44_fs_1.mp4",
"49_fs_2.mp4", "22_fs_1.mp4")
dataset <- dataset %>%
mutate(excluded = ifelse(file %in% target, 1, 0))
# Retain only experimental trials and create columns for the ccPAS protocol and group assignment
dataset <- dataset %>%
filter(Trials_loop.thisRepN == 0) %>%
mutate(Emotion = case_when(emotion == "anger" ~ "Anger",
emotion == "fear" ~ "Fearfull",
emotion == "happiness" ~ "Happiness"),
Emotion = factor(Emotion, levels = c("Anger", "Fearfull","Happiness")),
gender = ifelse(tolower(gender) == "m", "male", "female"),
Pt.id = sprintf("%02d", as.integer(participant))) %>% # Recode gender for clarity
# Select and rename columns for the final dataset
select(
File.name = file,
File.emotion = Emotion,
File.elicitation = elicitation,
Pt.id = participant,
Pt.age = eta,
Pt.gender = gender,
AED.accuracy = gesino_kb.corr,
AED.resp = gesino_kb.keys,
AED.intensity = genuine_slider.response,
EIJ.accuracy = accuracy,
EIJ.label = emotion_ms.clicked_name,
EIJ.intensity = intensity_slider.response,
Exp.date = date,
Exp.name = expName,
Exp.version = psychopyVersion,
Exp.frameRate = frameRate
)
# data for EAD
emotion_accuracy <- dataset %>%
group_by(Pt.id,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(EIJ.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,File.elicitation)) %>%
spread(label, accuracy)
genuine_accuracy <- dataset %>%
group_by(Pt.id,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(AED.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,File.elicitation)) %>%
spread(label, accuracy)
# Calculating hits, misses, false alarms, and correct rejections
SDT_genuine <- dataset %>%
GenuineDetection()
d_wide <- SDT_genuine %>%
select( Pt.id,  File.emotion, d_prime ) %>%
spread(File.emotion, d_prime)
c_wide <- SDT_genuine %>%
select( Pt.id, File.emotion, c ) %>%
spread(File.emotion, c)
# data for EIJ
autoevaluation <- read_excel("original_data/autovalutazione_clips.xlsx") %>%
select(-Emotion) %>%
'colnames<-'(c( "File.elicitation", "File.name","autoval"))
data <-  dataset %>%
select(Pt.id, File.emotion,  EIJ.intensity, File.name)
EA_dataset <- left_join(autoevaluation,data,by = "File.name") %>%
drop_na()%>%
filter(File.elicitation != "paused") %>%
group_by(Pt.id, File.emotion) %>%
summarise(EA = cor(EIJ.intensity,autoval),
EIJ.intensity = mean(EIJ.intensity, na.rm =TRUE),
autoval= mean(autoval, na.rm =TRUE))
genuine_intensity <- dataset %>%
filter(EIJ.accuracy == 1)%>%
group_by(Pt.id, File.emotion) %>%
summarise(slider = mean(abs(AED.intensity), na.rm = TRUE)) %>%
spread(File.emotion, slider)
genuine_intensity
genuine_intensity <- dataset %>%
filter(EIJ.accuracy == 1)%>%
group_by(Pt.id, File.emotion) %>%
summarise(slider = mean(abs(AED.intensity), na.rm = TRUE)) %>%
spread(File.emotion, slider)
emotion_intensity <- dataset %>%
group_by(Pt.id, File.emotion) %>%
summarise(slider = mean(EIJ.intensity, na.rm = TRUE)) %>%
spread(File.emotion, slider)
genuine_intensity
EA <- EA_dataset %>%
select( Pt.id,  File.emotion, EA ) %>%
spread(File.emotion, EA)
EA
demography <- dataset %>%
filter(Exp.session == "baseline",
File.name == "1_rg_2.mp4") %>%
select(  Pt.id, Pt.gender, Pt.age)
demography <- dataset %>%
filter(File.name == "1_rg_2.mp4") %>%
select(  Pt.id, Pt.gender, Pt.age)
demography
###########################################################################
#
#  Experiment:  GENUINE
#  Programmer:  QUETTIER THOMAS
#  Date:        23/01/2024
# Description: This script aggregates all .csv files generated by PsychoPy
#              and compiles them into a single .RData file for streamlined analysis.
#
#  Update:      08/09/2024
###########################################################################
# Clearing workspace
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
#replace_csv("session",2) # function to correct error in coding metadata from psychopy
# Data loading
datasetname <- "validation_dataset"
dataset_concatenation("original_data/psychopy",datasetname) # aggregates all .csv files
load(paste0("data/",datasetname,".RData") )
# Count participants
n <- length(unique(dataset$participant)) # Calculate the number of unique participants
target <- c("29_rg_2.mp4", "19_rg_5.mp4", "16_rg_2.mp4",
"1_rs_3.mp4", "10_rs_4.mp4", "19_rs_3.mp4",
"29_pg_1.mp4", "3_pg_1.mp4", "15_pg_2.mp4",
"55_ps_2.mp4", "20_ps_3.mp4", "9_fg_1.mp4",
"40_fg_1.mp4", "45_fg_2.mp4", "44_fs_1.mp4",
"49_fs_2.mp4", "22_fs_1.mp4")
dataset <- dataset %>%
mutate(excluded = ifelse(file %in% target, 1, 0))
# Retain only experimental trials and create columns for the ccPAS protocol and group assignment
dataset <- dataset %>%
filter(Trials_loop.thisRepN == 0) %>%
mutate(Emotion = case_when(emotion == "anger" ~ "Anger",
emotion == "fear" ~ "Fearfull",
emotion == "happiness" ~ "Happiness"),
Emotion = factor(Emotion, levels = c("Anger", "Fearfull","Happiness")),
gender = ifelse(tolower(gender) == "m", "male", "female"),
Pt.id = sprintf("%02d", as.integer(participant))) %>% # Recode gender for clarity
# Select and rename columns for the final dataset
select(
File.name = file,
File.emotion = Emotion,
File.elicitation = elicitation,
Pt.id = participant,
Pt.age = eta,
Pt.gender = gender,
AED.accuracy = gesino_kb.corr,
AED.resp = gesino_kb.keys,
AED.intensity = genuine_slider.response,
EIJ.accuracy = accuracy,
EIJ.label = emotion_ms.clicked_name,
EIJ.intensity = intensity_slider.response,
Exp.date = date,
Exp.name = expName,
Exp.version = psychopyVersion,
Exp.frameRate = frameRate
)
# data for EAD
emotion_accuracy <- dataset %>%
group_by(Pt.id,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(EIJ.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,File.elicitation)) %>%
spread(label, accuracy)
genuine_accuracy <- dataset %>%
group_by(Pt.id,File.emotion, File.elicitation) %>%
summarise(accuracy = mean(AED.accuracy,na.rm = TRUE)) %>%
ungroup() %>%
mutate(label = paste0(File.emotion,".",File.elicitation)) %>%
select(-c(File.emotion,File.elicitation)) %>%
spread(label, accuracy)
# Calculating hits, misses, false alarms, and correct rejections
SDT_genuine <- dataset %>%
GenuineDetection()
d_wide <- SDT_genuine %>%
select( Pt.id,  File.emotion, d_prime ) %>%
spread(File.emotion, d_prime)
c_wide <- SDT_genuine %>%
select( Pt.id, File.emotion, c ) %>%
spread(File.emotion, c)
# data for EIJ
autoevaluation <- read_excel("original_data/autovalutazione_clips.xlsx") %>%
select(-Emotion) %>%
'colnames<-'(c( "File.elicitation", "File.name","autoval"))
data <-  dataset %>%
select(Pt.id, File.emotion,  EIJ.intensity, File.name)
EA_dataset <- left_join(autoevaluation,data,by = "File.name") %>%
drop_na()%>%
filter(File.elicitation != "paused") %>%
group_by(Pt.id, File.emotion) %>%
summarise(EA = cor(EIJ.intensity,autoval),
EIJ.intensity = mean(EIJ.intensity, na.rm =TRUE),
autoval= mean(autoval, na.rm =TRUE))
genuine_intensity <- dataset %>%
filter(EIJ.accuracy == 1)%>%
group_by(Pt.id, File.emotion) %>%
summarise(slider = mean(abs(AED.intensity), na.rm = TRUE)) %>%
spread(File.emotion, slider)
emotion_intensity <- dataset %>%
group_by(Pt.id, File.emotion) %>%
summarise(slider = mean(EIJ.intensity, na.rm = TRUE)) %>%
spread(File.emotion, slider)
EA <- EA_dataset %>%
select( Pt.id,  File.emotion, EA ) %>%
spread(File.emotion, EA)
demography <- dataset %>%
filter(File.name == "1_rg_2.mp4") %>%
select(  Pt.id, Pt.gender, Pt.age)
# Save the data in .RData format
save(dataset, emotion_accuracy, genuine_accuracy, SDT_genuine, d_wide,c_wide,
EA_dataset, genuine_intensity, emotion_intensity, EA, demography,
file = paste0("data/",datasetname,".RData"))
#################################################
#
# END
#
#################################################
#  Script for Genuine Study - Dataset
#################################################
###########################################################################
#
#  Programmer:  QUETTIER THOMAS
#  Date:        03/06/2023
#  Description: General script
#  Experiment   Genuine VALIDATION DATASET
#
#  Update:      18/09/2024
###########################################################################
rm(list=ls()) # remove all objects
# Functions ---------------------------------------------------------------
devtools::load_all()
# Pre-processing-----------------------------------------------------------
# replace_csv("education",NA)
run_script("scripts/Dataset.R")
###########################################################################
#
#  Programmer:  QUETTIER THOMAS
#  Date:        03/06/2023
#  Description: General script
#  Experiment   Genuine VALIDATION DATASET
#
#  Update:      18/09/2024
###########################################################################
rm(list=ls()) # remove all objects
# Functions ---------------------------------------------------------------
devtools::load_all()
# Pre-processing-----------------------------------------------------------
# replace_csv("education",NA)
run_script("scripts/Dataset.R")
# Clearing workspace
rm(list = ls())  # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all()  # Load necessary functions and packages
# Data loading and eliminate outliers and 5 of the 6 M1 group
# Data loading
load("data/validation_dataset.RData")
###########################################################################
rm(list=ls()) # remove all objects
# Functions ---------------------------------------------------------------
devtools::load_all()
# Pre-processing-----------------------------------------------------------
# replace_csv("education",NA)
run_script("scripts/Dataset.R") # description in /docs/Dataset_description.html
run_script("scripts/Export_xlsx.R") # return data/Genuine_summary_full_pts.xlsx
###########################################################################
#
#  Experiment:  GENUINE
#  Programmer:  QUETTIER THOMAS
#  Date:        23/01/2024
# Description: This script aggregates all .csv files generated by PsychoPy
#              and compiles them into a single .RData file for streamlined analysis.
#
#  Update:      08/09/2024
###########################################################################
# Clearing workspace
rm(list=ls()) # Clear the existing workspace to avoid conflicts
# Load dependencies
devtools::load_all() # Load necessary functions and packages
#replace_csv("session",2) # function to correct error in coding metadata from psychopy
# Data loading
datasetname <- "validation_dataset"
dataset_concatenation("original_data/psychopy",datasetname) # aggregates all .csv files
load(paste0("data/",datasetname,".RData") )
# Count participants
n <- length(unique(dataset$participant)) # Calculate the number of unique participants
target <- c("29_rg_2.mp4", "19_rg_5.mp4", "16_rg_2.mp4",
"1_rs_3.mp4", "10_rs_4.mp4", "19_rs_3.mp4",
"29_pg_1.mp4", "3_pg_1.mp4", "15_pg_2.mp4",
"55_ps_2.mp4", "20_ps_3.mp4", "9_fg_1.mp4",
"40_fg_1.mp4", "45_fg_2.mp4", "44_fs_1.mp4",
"49_fs_2.mp4", "22_fs_1.mp4")
dataset <- dataset %>%
mutate(excluded = ifelse(file %in% target, 1, 0))
# Retain only experimental trials and create columns for the ccPAS protocol and group assignment
dataset <- dataset %>%
filter(Trials_loop.thisRepN == 0) %>%
mutate(Emotion = case_when(emotion == "anger" ~ "Anger",
emotion == "fear" ~ "Fearfull",
emotion == "happiness" ~ "Happiness"),
Emotion = factor(Emotion, levels = c("Anger", "Fearfull","Happiness")),
gender = ifelse(tolower(gender) == "m", "male", "female"),
Pt.id = sprintf("%02d", as.integer(participant))) %>% # Recode gender for clarity
# Select and rename columns for the final dataset
select(
File.name = file,
File.emotion = Emotion,
File.elicitation = elicitation,
Pt.id = participant,
Pt.age = eta,
Pt.gender = gender,
AED.accuracy = gesino_kb.corr,
AED.resp = gesino_kb.keys,
AED.intensity = genuine_slider.response,
EIJ.accuracy = accuracy,
EIJ.label = emotion_ms.clicked_name,
EIJ.intensity = intensity_slider.response,
Exp.date = date,
Exp.name = expName,
Exp.version = psychopyVersion,
Exp.frameRate = frameRate
)
View(dataset)
rm(list=ls()) # remove all objects
# Functions ---------------------------------------------------------------
devtools::load_all()
# Pre-processing-----------------------------------------------------------
# replace_csv("education",NA)
run_script("scripts/Dataset.R") # description in /docs/Dataset_description.html
run_script("scripts/Export_xlsx.R") # return data/Genuine_summary_full_pts.xlsx
